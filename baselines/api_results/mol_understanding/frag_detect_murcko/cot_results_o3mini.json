[
    {
        "smiles": "O=C(c1ccc(-c2ccccc2)cc1)N1CCN(c2ccccc2F)CC1",
        "largest_scaffold": "O=C(c1ccc(-c2ccccc2)cc1)N1CCN(c2ccccc2)CC1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccc(C(=O)N2CCNCC2)cc1"
        }
    },
    {
        "smiles": "Cc1ccc(-c2nnc(SCc3ccccc3)o2)c(O)c1",
        "largest_scaffold": "c1ccc(CSc2nnc(-c3ccccc3)o2)cc1",
        "task": "Murcko_scaffold",
        "json_results": "```json\n{\n    \"Output Scaffold\": \"c1ccc(-c2nnco2)cc1\"\n}\n```"
    },
    {
        "smiles": "Cc1c(-c2ccc(O)cc2)n(Cc2ccc(O)cc2)c2ccc(O)cc12",
        "largest_scaffold": "c1ccc(Cn2c(-c3ccccc3)cc3ccccc32)cc1",
        "task": "Murcko_scaffold",
        "json_results": "\n```python\n # try RDKit import\nfrom rdkit import Chem\nfrom rdkit.Chem.Scaffolds import MurckoScaffold\nsmiles=\"Cc1c(-c2ccc(O)cc2)n(Cc2ccc(O)cc2)c2ccc(O)cc12\"\nmol=Chem.MolFromSmiles(smiles)\nscaff=MurckoScaffold.GetScaffoldForMol(mol)\nprint(Chem.MolToSmiles(scaff))\n```\nResult: run failed\u274c \n```shell\n  No module named 'rdkit'\n```\n\n```json\n{\n    \"Output Scaffold\": \"c1ccc2c(c1)nc3ccccc23\"\n}\n```"
    },
    {
        "smiles": "CCC(C)(C)Nc1c(C#N)cnc2cnc(NCc3cccnc3)cc12",
        "largest_scaffold": "c1cncc(CNc2cc3cccnc3cn2)c1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccnc2cnccc12"
        }
    },
    {
        "smiles": "CCN(CC)S(=O)(=O)c1ccc(C(=O)NCCCn2ccnc2)cc1",
        "largest_scaffold": "O=C(NCCCn1ccnc1)c1ccccc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccc(C(=O)NCCCn2ccnc2)cc1"
        }
    },
    {
        "smiles": "COc1cc2c(cc1OC)-c1cc(Nc3c(Cl)cccc3Cl)nc(=O)n1CC2",
        "largest_scaffold": "O=c1nc(Nc2ccccc2)cc2n1CCc1ccccc1-2",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccc2c(c1)nc(=O)n(CC2)"
        }
    },
    {
        "smiles": "CC12CCN(C(=O)C3CCC(C(=O)O)CC3)C(Cc3c(O)cccc31)C2(C)C",
        "largest_scaffold": "O=C(C1CCCCC1)N1CCC2CC1Cc1ccccc12",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "C1CCN2(C(=O)C3CCCCC3)c4ccccc4C12"
        }
    },
    {
        "smiles": "CC(C)n1cnc2c(NCc3ccccc3)ncnc21",
        "largest_scaffold": "c1ccc(CNc2ncnc3[nH]cnc23)cc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "n1cnc2ncnc12"
        }
    },
    {
        "smiles": "CCc1ncnc(-c2ccc(C(=O)N3CCN(CCN)CC3)c(Cl)c2)c1C#Cc1ccc(N)nc1",
        "largest_scaffold": "O=C(c1ccc(-c2ncncc2C#Cc2cccnc2)cc1)N1CCNCC1",
        "task": "Murcko_scaffold",
        "json_results": "```json\n{\"Output Scaffold\":\"c1ncnc(-c2ccccc2)c1C#Cc3cccnc3\"}\n```"
    },
    {
        "smiles": "COc1cc2nc(N3CCN(C(=O)C(F)=Cc4ccccc4)CC3)nc(N)c2cc1OC",
        "largest_scaffold": "O=C(C=Cc1ccccc1)N1CCN(c2ncc3ccccc3n2)CC1",
        "task": "Murcko_scaffold",
        "json_results": "Below is an analysis of the input SMILES string\n\n\u2003\u2003COc1cc2nc(N3CCN(C(=O)C(F)=Cc4ccccc4)CC3)nc(N)c2cc1OC\n\nNote that this string encodes a relatively complex molecule. In words, the structure contains three main \u201cparts\u201d that are connected as follows:\n\n1. A fused aromatic heterocycle:\n\u2003\u2003\u2022 The portion \u201cCOc1cc2nc(\u2026\u200b)nc(N)c2cc1OC\u201d represents a bicyclic system made by fusing an aromatic benzene\u2010ring portion (with two methoxy substituents \u201cCO\u2013\u201d and \u201c\u2013OC\u201d) and a nitrogen\u2010containing ring (bearing at least one \u2013NH\u2082 group). Often such fused systems resemble a benzopyrimidine or a related bicyclic heterocycle.\n\u2003\u2003\u2022 The two \u2013OCH\u2083 (methoxy) groups are attached at positions on the \u201cbenzene\u201d portion of the fused system.\n\n2. A piperazine linker:\n\u2003\u2003\u2022 The fragment \u201cN3CCN(\u2026\u200b)CC3\u201d defines a six\u2010membered saturated ring containing two nitrogen atoms (a piperazine motif).\n\u2003\u2003\u2022 One of the piperazine nitrogens is connected to the fused heterocycle (through the substituent \u201cnc(\u2026)\u201d earlier in the SMILES), thereby linking the heterocycle to the following acyl substituent.\n\n3. An acyl substituent on the piperazine:\n\u2003\u2003\u2022 The group \u201cC(=O)C(F)=Cc4ccccc4\u201d is attached via the piperazine nitrogen.\n\u2003\u2003\u2022 Here an acyl group (a carbonyl C(=O)\u2013) is connected to a vinyl fragment that is substituted by a fluorine (C(F)=C\u2013) and then further conjugated to a phenyl ring (c4ccccc4). You can view this as an (E)/(Z)\u2010unsaturated acyl fragment (a Michael acceptor unit) appended with a styryl (phenyl\u2010vinyl) substructure.\n\nIn summary, the molecule can be described as a 2,6\u2010dimethoxy\u2013substituted, amino\u2010containing fused heterocycle connected via an amino linker to a piperazine ring that in turn is N\u2011substituted with an acyl group. That acyl portion features a carbonyl conjugated to a fluoro\u2010substituted vinyl group and a phenyl ring.\n\nAlthough an unambiguous systematic IUPAC name would be very long, you might see this molecule described in the literature as, for example, a \u201c2,6\u2010dimethoxy\u2013amino\u2013fused arylpyrimidine linked via piperazine to a (fluoro\u2010vinyl)benzoyl moiety.\u201d\n\nIf you need further details\u2014such as exact atom numbering, 3D conformation, or computed properties (molecular weight, logP, etc.)\u2014please let me know how you\u2019d like to proceed."
    },
    {
        "smiles": "Nc1c(C(=O)c2cccc(C(O)CO)c2)cnn1-c1ccc(F)cc1",
        "largest_scaffold": "O=C(c1ccccc1)c1cnn(-c2ccccc2)c1",
        "task": "Murcko_scaffold",
        "json_results": "Below is an interpretation of the SMILES\n\n\u2003\u2003Nc1c(C(=O)c2cccc(C(O)CO)c2)cnn1-c1ccc(F)cc1\n\nwhich you provided. This string represents an organic molecule built from three major fragments:\n\n1. A five\u2010membered heterocycle that is a pyrazole ring. In the SMILES the ring is written as\n\u2003\u2003c1c(\u2026 )cnn1\nOne of the carbon atoms of this ring carries an \u2013NH\u2082 substituent (the initial \u201cN\u201d before \u201cc1\u201d), so the heterocycle is an aminopyrazole. (Pyrazole itself has two nitrogen atoms; here one nitrogen is \u201cinside\u201d the ring and another appears as a substituent on the ring closure.)\n\n2. A benzoyl \u201carm\u201d attached to the pyrazole. Looking at\n\u2003\u2003C(=O)c2cccc(C(O)CO)c2\nthis portion shows that a carbonyl group (C(=O)) is linked to a benzene ring (ring \u201cc2\u2026c2\u201d). In addition, that benzene bears a further substituent defined as (C(O)CO).\n\n\u2003\u2003\u2022 The carbonyl (C(=O)) connects the pyrazole to the benzene ring.\n\u2003\u2003\u2022 On the benzene (originally C\u2086H\u2086) one hydrogen is replaced by the substituent C(O)CO. When parsed in detail, C(O)CO represents a two\u2010carbon \u201cchain\u201d where the first carbon is drawn with a branch \u201c(O)\u201d and the second carbon is attached to an oxygen. With the usual SMILES implicit\u2013hydrogen rules for sp\u00b3 carbons, this fragment corresponds to a CH\u2082CH\u2082 unit in which each carbon bears an \u2013OH (that is, a 1,2\u2010diol). In other words, the benzene \u201carm\u201d is substituted by a \u2013CH\u2082CH\u2082(OH)\u2082 group.\n\n3. A para\u2010fluorophenyl substituent attached to the pyrazole. The final fragment,\n\u2003\u2003-c1ccc(F)cc1\ndescribes a benzene ring with one fluorine (F) atom substituent. (In the absence of other locants the F is assumed to be in the para position with respect to the bond to the pyrazole.)\n\nPutting these pieces together, the overall structure can be described as follows:\n\n\u2022 An aminopyrazole core whose one position (on a carbon of the ring) is substituted with a benzoyl group. That benzoyl group is not \u201cplain\u201d but is on its aromatic ring further substituted by a 1,2-dihydroxyethyl group (\u2013CH\u2082CH\u2082(OH)\u2082). \n\u2022 In addition, one of the nitrogen atoms of the pyrazole is bound to a 4-fluorophenyl ring.\n\nA textual \u201cpicture\u201d of the connectivity would be:\n\n\u2003\u2003NH\u2082\u2013pyrazole\u2013(at one carbon)\u2013C(=O)\u2013benzene\u2013(bearing CH\u2082CH\u2082(OH)\u2082)\n\n\u2003\u2003and\n\n\u2003\u2003pyrazole\u2013(at one nitrogen)\u20134\u2011fluorophenyl.\n\nA Suggested Description (not a full IUPAC name) might be along the lines of:\n\u2003\u2003\u201c4\u2011Amino\u20111\u2011(4\u2011fluorophenyl)\u20113\u2011(2-(2,3-dihydroxyethyl)benzoyl)pyrazole.\u201d\n\nNote:\n\u2022 The exact numbering on the pyrazole ring (and hence the precise IUPAC name) depends on the adopted numbering conventions for pyrazoles. In many naming schemes the nitrogen bearing the aryl substituent is taken as N\u20111. The description above conveys the connectivity found in the SMILES.\n\u2022 The diol substituent on the benzene ring comes from the \u201cC(O)CO\u201d fragment; by SMILES convention each \u201cC\u201d with only two bonds implied obtains the missing hydrogens, so that C(O)CO is read as \u2013CH\u2082CH\u2082(OH)\u2082.\n\nIf you need an image of the molecule or further calculated properties (such as the molecular formula or molecular weight), please let me know."
    },
    {
        "smiles": "O=C(NCC1CCCO1)C(=Cc1cccc([N+](=O)[O-])c1)NC(=O)c1ccccc1",
        "largest_scaffold": "O=C(NCC1CCCO1)C(=Cc1ccccc1)NC(=O)c1ccccc1",
        "task": "Murcko_scaffold",
        "json_results": "Below is one way to \u201cread\u2010out\u201d and analyze the molecule given by the SMILES\n\n\u2003\u2003O=C(NCC1CCCO1)C(=Cc1cccc([N+](=O)[O-])c1)NC(=O)c1ccccc1\n\nThe string may look overwhelming at first, but it can be broken down into three main fragments that are \u201cstitched\u201d together at a central (methine) carbon. One useful interpretation is as follows:\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \n1. Left Fragment \u2013 Amide with a 2\u2011(oxetanyl)ethyl Unit\n\n\u2003\u2022 The SMILES begins with\n\n\u2003\u2003O=C(NCC1CCCO1)\n\n\u2003 This represents a carbonyl (O=C) whose carbon is bonded to an \u2013NCC1CCCO1 substituent. In other words, the carbonyl is part of an amide in which the nitrogen is substituted by \u201cCC1CCCO1.\u201d\n\n\u2003\u2022 Look at NCC1CCCO1:\n\u2003\u2003\u2013 The \u201cNCC\u2026\u201d tells you that an ethylene (\u2013CH2CH2\u2013) chain links the amide N to a ring.\n\u2003\u2003\u2013 The fragment \u201cC1CCCO1\u201d defines a ring built from three carbon atoms and one oxygen. (Because the ring closure numbers \u201c1 \u2026 O1\u201d indicate that four atoms are involved, this is an oxetane ring rather than the five\u2010membered tetrahydrofuran.) \n\n\u2003Thus, the left fragment functions as a \u201ccarbamoyl\u201d group in which the nitrogen is substituted by a 2\u2011(oxetanyl)ethyl chain.\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \n2. Middle Fragment \u2013 The \u03b1\u2011Substituted (Styryl) Carbon\n\n\u2003\u2022 Immediately following the left part, the SMILES continues with\n\n\u2003\u2003C(=Cc1cccc([N+](=O)[O-])c1)\n\n\u2003 Here, the \u201cC(=C \u2026)\u201d indicates that the central carbon (which is \u201csp\u00b3\u201d and already bonded to the left fragment\u2019s carbonyl) is also bonded to a \u201c=C\u2026\u201d group. In detail:\n\u2003\u2003\u2013 A double bond \u201c=C\u201d attaches this carbon to another carbon that in turn is bonded to an aromatic ring.\n\u2003\u2003\u2013 The aromatic portion \u201cc1cccc([N+](=O)[O-])c1\u201d is a benzene ring carrying a nitro substituent (written as [N+](=O)[O-]).\n\n\u2003\u2022 This segment is equivalent to having a (typically E\u2010configured) vinyl (\u2013CH=CH\u2013) linkage between the central carbon and a 4\u2011nitrophenyl group.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \n3. Right Fragment \u2013 The Benzoyl Amide\n\n\u2003\u2022 The SMILES ends with\n\n\u2003\u2003NC(=O)c1ccccc1\n\n\u2003 This part shows an \u2013NH\u2013C(=O)\u2013aryl fragment. In plain language, an amino group is acylated by a benzoyl unit (c1ccccc1 stands for a phenyl ring). \n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \nPutting It All Together\n\nOne way to \u201csee\u201d the complete structure is to note that the central carbon (the one in\n\n\u2003\u2003\u2026O=C(NCC1CCCO1) C(=Cc1\u2026)\n\n) is \u201ctri\u2010substituted\u201d with these groups:\n\u2003\u2022 To one side is an acyl unit (the left fragment giving an N\u2011(2\u2011oxetanyl)ethyl carbamoyl group).\n\u2003\u2022 In another \u201cdirection\u201d the carbon bears an exocyclic double bond that connects to a nitrophenyl group.\n\u2003\u2022 Finally, the central carbon is also attached to an \u2013NH\u2013C(=O)\u2013phenyl fragment (the benzoyl amide on the right).\n\nIn other words, the overall molecule can be viewed as an acetamide derivative (\u201cacetamide\u201d because the central carbon next to a carbonyl is analogous to an acetyl group) that is doubly N\u2010substituted\u2014with one arm being a benzoyl group and the other being a (2\u2011oxetanyl)ethyl group\u2014and which bears at its \u201c\u03b1\u2011position\u201d an exocyclic vinyl substituent that is linked to a 4\u2011nitrophenyl ring.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \nA Possible IUPAC Name\n\nA systematic (though by no means unique) IUPAC name that tries to capture the connectivity is:\n\n\u2003\u2003N-[(2-oxetanyl)ethyl]-2-[(E)-2-(4-nitrophenyl)vinyl]-N-benzoylacetamide\n\nHere\u2019s the rationale:\n\u2003\u2013 \u201cN-[(2-oxetanyl)ethyl]\u201d denotes the \u2013NCH2CH2\u2013(oxetane) substituent coming from the left fragment.\n\u2003\u2013 \u201cN-benzoyl\u201d comes from the right fragment (\u2013NC(=O)Ph).\n\u2003\u2013 \u201c2-[(E)-2-(4-nitrophenyl)vinyl]\u201d describes the substituent at the \u03b1\u2011position (the central carbon) that features a double bond (assumed to be E\u2011configured) with a 4\u2011nitrophenyl group.\n\nNote that other names are possible depending on how one \u201cdissects\u201d the molecule, and in the absence of stereochemical markers (other than what is implied by a standard vinyl group in SMILES), one must sometimes make a best\u2010estimate regarding geometry.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \nSummary\n\nThe input SMILES encodes a molecule that can be viewed as an acetamide derivative bearing:\n\u2003\u2022 An N\u2011substituent of 2\u2011(oxetanyl)ethyl (from O=C(NCC1CCCO1)),\n\u2003\u2022 An \u03b1\u2011(E)-vinyl substituent linked to a 4\u2011nitrophenyl group (from C(=Cc1cccc([N+](=O)[O-])c1)), and\n\u2003\u2022 A second N\u2011substituent consisting of a benzoyl group (from NC(=O)c1ccccc1).\n\nThis interpretation leads to the systematic name\n\n\u2003\u2003N-[(2-oxetanyl)ethyl]-2-[(E)-2-(4-nitrophenyl)vinyl]-N-benzoylacetamide\n\nwhich neatly summarizesthe structure.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \nConclusion\n\nWhether you are looking to draw the structure, determine physical properties, or feed it into a modeling program, you now have a clear picture of how the molecule \u201cbreaks up\u201d into its constituent fragments and how these parts are connected."
    },
    {
        "smiles": "C=Cc1ccc(C2CC3CCC(C2C(=O)OC)N3C)cc1",
        "largest_scaffold": "c1ccc(C2CC3CCC(C2)N3)cc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccc(C2CC3CCC(C2)N3C)cc1"
        }
    },
    {
        "smiles": "CC(C)=Cc1ccc2cc(NC(=O)C3CC3)ncc2c1",
        "largest_scaffold": "O=C(Nc1cc2ccccc2cn1)C1CC1",
        "task": "Murcko_scaffold",
        "json_results": "It looks like you\u2019ve provided a SMILES string representing a particular organic molecule:\n\n\u2003\u2003CC(C)=Cc1ccc2cc(NC(=O)C3CC3)ncc2c1\n\nBefore proceeding further, could you please clarify what you would like to do with this molecule? For example, are you interested in one or more of the following?\n\n\u2003\u2022 Converting the SMILES into a 2D or 3D structure  \n\u2003\u2022 Obtaining the IUPAC name  \n\u2003\u2022 Calculating molecular properties (molecular weight, formula, logP, etc.)  \n\u2003\u2022 Discussing possible synthetic routes or reactivity  \n\nHere\u2019s a brief summary of what we can tell at a glance from the SMILES:\n\n1. An isopropenyl group (CC(C)=C) is present; this is the \u2013CH2=C(CH3)\u2013 fragment.\n2. The aromatic portion (c1ccc2\u2026c2c1) constitutes a fused bicyclic ring system. In this case, the pattern suggests a benzene ring fused with a heterocycle (the \u201cncc\u201d portion indicates the presence of at least one nitrogen atom in the heterocycle).\n3. Within the bicyclic system there is a substituent \u201cNC(=O)C3CC3\u201d that corresponds to an N\u2010cyclopropanecarbonylamino group.\n\nIf you let me know what information or transformation you need, I\u2019ll be happy to help further!"
    },
    {
        "smiles": "CC(=O)NC(C)c1ccc(OC2CCN(c3nc(N4CCCC4C)ncc3F)C2)cc1",
        "largest_scaffold": "c1ccc(OC2CCN(c3ccnc(N4CCCC4)n3)C2)cc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccc(cc1)OC2CN(C2)c3nc(n(c4CCCC4)cc3)"
        }
    },
    {
        "smiles": "Cc1ccnc(Oc2ccccc2-c2ccc(-c3cnc(N)nc3)c(F)c2)n1",
        "largest_scaffold": "c1cnc(Oc2ccccc2-c2ccc(-c3cncnc3)cc2)nc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1nccn1Oc2ccccc2-c3ccccc3-c4cncnc4"
        }
    },
    {
        "smiles": "CCc1ccccc1NC(=O)Cn1nc(CC)n2c(cc3sccc32)c1=O",
        "largest_scaffold": "O=C(Cn1ncn2c(cc3sccc32)c1=O)Nc1ccccc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccccc1NCCn2ncn3c(cc4sccc43)c2"
        }
    },
    {
        "smiles": "CC(NC(=O)Nc1cc2[nH]nc(NC(C)c3ccccn3)c2cn1)c1ccccc1",
        "largest_scaffold": "O=C(NCc1ccccc1)Nc1cc2[nH]nc(NCc3ccccn3)c2cn1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccccc1CNC(=O)Nc2cc3[nH]nc(c3cn2)"
        }
    },
    {
        "smiles": "CC1CN(c2c(F)cc3c(=O)c(C(=O)O)cn(C4CC4)c3c2Cl)CCN1",
        "largest_scaffold": "O=c1ccn(C2CC2)c2cc(N3CCNCC3)ccc12",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "N1CCN(c2ccc3nc(c)c3c2)CC1"
        }
    },
    {
        "smiles": "CC(=O)NCC1CN(c2ccc(C(C)=NO)cc2)C(=O)O1",
        "largest_scaffold": "O=C1OCCN1c1ccccc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "C1CN(c2ccc(cc2))C(=O)O1"
        }
    },
    {
        "smiles": "NC(=O)c1cncnc1Nc1cccc(C(F)(F)F)c1",
        "largest_scaffold": "c1ccc(Nc2ccncn2)cc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1cncnc1Nc1ccccc1"
        }
    },
    {
        "smiles": "O=c1cc(-c2ccccc2)oc2cc(OCCNC3CCCCC3)cc(O)c12",
        "largest_scaffold": "O=c1cc(-c2ccccc2)oc2cc(OCCNC3CCCCC3)ccc12",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccoc2cccc12"
        }
    },
    {
        "smiles": "O=C(O)Cc1ccc2c(c1)C(O)(C(F)(F)F)c1ccccc1-2",
        "largest_scaffold": "c1ccc2c(c1)Cc1ccccc1-2",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccc2ccccc2c1"
        }
    },
    {
        "smiles": "Cn1c(=O)c(Oc2ccc(F)cc2F)cc2cnc(N3CCCC(O)C3)nc21",
        "largest_scaffold": "O=c1[nH]c2nc(N3CCCCC3)ncc2cc1Oc1ccccc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "n1c(=O)cc2cncnc12"
        }
    },
    {
        "smiles": "CC(NC(=O)Nc1cc2[nH]nc(S(C)(=O)=O)c2cn1)c1ccccc1",
        "largest_scaffold": "O=C(NCc1ccccc1)Nc1cc2[nH]ncc2cn1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccccc1CNC(=O)Nc2cc3[nH]nc(c3cn2)"
        }
    },
    {
        "smiles": "O=C(CCCCCCC(=O)Nc1ccccc1)NO",
        "largest_scaffold": "c1ccccc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccccc1"
        }
    },
    {
        "smiles": "Cc1cc(C(N)=O)ccc1-n1c(CCC(=O)O)ccc1-c1ccc(-c2cnn(C)c2)cc1",
        "largest_scaffold": "c1ccc(-n2cccc2-c2ccc(-c3cn[nH]c3)cc2)cc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccccc1n2cccc2c3ccc(c4cnnc4)c3"
        }
    },
    {
        "smiles": "O=C(C=CNc1ccccc1C(=O)O)c1cccs1",
        "largest_scaffold": "O=C(C=CNc1ccccc1)c1cccs1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1cccs1CC=CNc2ccccc2"
        }
    },
    {
        "smiles": "N#Cc1cc2cnc(NCc3ccccc3)nc2n(C2CCCC2)c1=O",
        "largest_scaffold": "O=c1ccc2cnc(NCc3ccccc3)nc2n1C1CCCC1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1cc2cnc(nc2n)c1=O"
        }
    },
    {
        "smiles": "Cc1[nH]c2ccc(Cl)cc2c1-c1ccnc(N2CCCC2)n1",
        "largest_scaffold": "c1ccc2c(-c3ccnc(N4CCCC4)n3)c[nH]c2c1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1[nH]c2ccccc2c1-c3ccnc3"
        }
    },
    {
        "smiles": "CN(Cc1ccco1)c1nc(-c2cccc(C#N)c2)nc2ccccc12",
        "largest_scaffold": "c1ccc(-c2nc(NCc3ccco3)c3ccccc3n2)cc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1nc(-c2ccccc2)nc2ccccc12"
        }
    },
    {
        "smiles": "COc1cc2c(cc1OC)C1CC(N)C(N3CC(C)CCC3=O)CN1CC2",
        "largest_scaffold": "O=C1CCCCN1C1CCC2c3ccccc3CCN2C1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1cc2c(cc1)C1CC(C(N3CCCC3))CN1CC2"
        }
    },
    {
        "smiles": "Cc1cc(=O)oc2cc(NC(=O)Cc3ccc(Br)cc3)ccc12",
        "largest_scaffold": "O=C(Cc1ccccc1)Nc1ccc2ccc(=O)oc2c1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1cc(=O)oc2ccccc12"
        }
    },
    {
        "smiles": "O=c1cc(-c2cccc(O)c2)oc2c1ccc1ccccc12",
        "largest_scaffold": "O=c1cc(-c2ccccc2)oc2c1ccc1ccccc12",
        "task": "Murcko_scaffold",
        "json_results": "```json\n{\n    \"Output Scaffold\": \"O=c1c2ccccc2oc2ccccc12\"\n}\n```"
    },
    {
        "smiles": "COc1ccc(C(=O)NC(C)c2nccs2)cc1OC1CCN(C(C)C)CC1",
        "largest_scaffold": "O=C(NCc1nccs1)c1cccc(OC2CCNCC2)c1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1c(OC2CCNCC2)cc(c1)C(=O)NCc3nccs3"
        }
    },
    {
        "smiles": "O=C(c1ccccc1)N1CCCC(Nc2ccc(F)cc2)C1",
        "largest_scaffold": "O=C(c1ccccc1)N1CCCC(Nc2ccccc2)C1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccccc1C(=O)N2CCCCC2"
        }
    },
    {
        "smiles": "CCC1(CC)C(=O)N(COC(=O)c2ccccc2)C1S(=O)(=O)c1ccccc1",
        "largest_scaffold": "O=C(OCN1C(=O)CC1S(=O)(=O)c1ccccc1)c1ccccc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "C1CN1"
        }
    },
    {
        "smiles": "O=C(NC(=S)NCc1ccco1)c1ccc([N+](=O)[O-])cc1",
        "largest_scaffold": "O=C(NC(=S)NCc1ccco1)c1ccccc1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "c1ccccc1C(=O)NC(=S)NCc2ccco2"
        }
    },
    {
        "smiles": "CC(C)C(=O)NC1CCN(Cc2ccccc2)CC1",
        "largest_scaffold": "c1ccc(CN2CCCCC2)cc1",
        "task": "Murcko_scaffold",
        "json_results": "```json\n{\n    \"Output Scaffold\": \"c1ccccc1CN1CCNCC1\"\n}\n```"
    },
    {
        "smiles": "CCOC(=O)CC(NC(=O)C1CCCN1)C1OC2OC(C)(C)OC2C1OC",
        "largest_scaffold": "O=C(NCC1CC2OCOC2O1)C1CCCN1",
        "task": "Murcko_scaffold",
        "json_results": {
            "Output Scaffold": "C(NC(=O)C1CCCN1)(C2OC3OC(C)(C)OC3C2OC)"
        }
    }
]