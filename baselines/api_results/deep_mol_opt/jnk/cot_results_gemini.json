[
    {
        "src_smiles": "Cn1c(SCC(=O)Nc2ccccc2)nc2ccccc2c1=O",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1ccc(NC(=O)CSCc2nc3ccccc3c(=O)n2C)cn1\"\n}\n```"
    },
    {
        "src_smiles": "NC(=O)c1cncnc1Nc1cccc(C(F)(F)F)c1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CNC(=O)c1cncnc1Nc1cc(F)c(C(F)(F)F)cc1\"\n}\n```"
    },
    {
        "src_smiles": "COc1ncc2nc(-c3ccc(F)cc3)c(=O)n(C)c2n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Nc1nc(C)c2nc(-c3ccncc3)c(=O)n(C)c2n1\"\n}\n```"
    },
    {
        "src_smiles": "c1cc(Nc2ccon2)nc(Nc2ccc(N3CCOCC3)cc2)n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"c1cc(Nc2cccc(O)c2)nc(Nc2ccc(N3CCOCC3)cc2)n1\"\n}\n```"
    },
    {
        "src_smiles": "Cc1ccc(-c2csc3ncnc(NCCCC(=O)O)c23)cc1C",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Clc1ccc(-c2csc3ncnc(NCCCC(=O)O)c23)cc1C\"\n}\n```"
    },
    {
        "src_smiles": "O=C(Nc1cnccn1)c1ccccc1NCc1ccncc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C(Nc1cnccn1)c1cc(NCc2ccccn2)cc(C(F)(F)F)c1\"\n}\n```"
    },
    {
        "src_smiles": "O=c1cc(-c2cccc(O)c2)oc2c1ccc1ccccc12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1ccc2cc3c(cc(=O)c(o3)-c4ccc(O)cc4)cc2c1\"\n}\n```"
    },
    {
        "src_smiles": "Nc1ccc(C(=O)C=Cc2ccc(-c3ccccc3)cc2)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Nc1ccc(cc1)c2cc(-c3ccc(cc3)-c4ccccc4)nc(N)n2\"\n}\n```"
    },
    {
        "src_smiles": "O=C(CCCc1ccccc1)Nc1ccc(O)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C(/C=C/c1ccc(F)cc1)Nc1nccc(Cl)c1\"\n}\n```"
    },
    {
        "src_smiles": "O=c1cc(-c2ccccc2Cl)oc2c1ccc1ccccc12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=c1cc(-c2cc(Cl)c(N)cc2)oc2c1ccc1ccccc12\"\n}\n```"
    },
    {
        "src_smiles": "Cn1c(=O)c(-c2ccccc2)nc2cncnc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CN1C(=O)C(c2cc(Cl)ccc2)=NC3=C1N=CN=C3\"\n}\n```"
    },
    {
        "src_smiles": "Cc1[nH]c(C=C2C(=O)Nc3ccccc32)c(C)c1Br",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Cc1[nH]c(C=C2C(=O)Nc3cc(F)ccc32)c(C)c1C(F)(F)F\"\n}\n```"
    },
    {
        "src_smiles": "c1nc(N2CCCCC2)c2cc[nH]c2n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"c1nc(Nc2ccc(F)cc2)c2c(Br)c[nH]c2n1\"\n}\n```"
    },
    {
        "src_smiles": "Cn1c(=O)c(-c2c(Cl)cccc2Cl)cc2cnc(O)nc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Cn1c(=O)c(-c2c(Cl)cccc2Cl)cc2cnc(N)nc21\"\n}\n```"
    },
    {
        "src_smiles": "Nc1nccc(-c2ccc3ccccc3c2)n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Nc1nccc(-c2ccc3cc(OC)ccc3c2)n1\"\n}\n```"
    },
    {
        "src_smiles": "CC(C)n1cnc2c(Nc3cccc(Cl)c3)ncnc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"C1CC1n1cnc2c(Nc3ccc(F)c(C(F)(F)F)c3)ncnc21\"\n}\n```"
    },
    {
        "src_smiles": "CCC(C)Nc1ncnc2cc(OC)c(OC)cc12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1cc2c(Nc3cccc(Cl)c3)ncnc2cc1OC\"\n}\n```"
    },
    {
        "src_smiles": "c1ccc(Nc2ccc(Oc3nccnc3C3CCOC3)cc2)nc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"c1ccc(Nc2ccc(Oc3ncc(N4CCC(O)CC4)nc3)cc2)nc1\"\n}\n```"
    },
    {
        "src_smiles": "O=c1cc(N2CCOCC2)oc2c(OCc3ccccc3)cccc12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=c1cc(c2sccc2)oc2c(OCc3ccc(OC)cc3)cccc12\"\n}\n```"
    },
    {
        "src_smiles": "COc1ccc(Nc2nccc(N3CCN(C)CC3)n2)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1ccc(F)c(Nc2nc(N3CCOCC3)c(C)cn2)c1\"\n}\n```"
    },
    {
        "src_smiles": "Nc1ccc(Nc2nc(-c3ccc(Cl)cc3)cs2)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Nc1cc(Nc2nc(-c3ccc(F)cc3)cs2)ccn1\"\n}\n```"
    },
    {
        "src_smiles": "COc1cc2ncnc(Nc3ccc(N)cc3)c2cc1OC",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1cc2c(cc1OC)ncnc2Nc1ccc(N)c(OC)c1\"\n}\n```"
    },
    {
        "src_smiles": "NC(=O)c1cccc2c(NCc3cccc(F)c3)ncnc12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C(N)c1ccc2c(ncnc2NCc2cc(F)cc(F)c2)c1\"\n}\n```"
    },
    {
        "src_smiles": "CC(C)n1cnc2c(NCc3ccccc3)nc(N)nc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"C1CCC(C1)n1cnc2c(NCc3cc(Cl)c(O)cc3)nc(N)nc21\"\n}\n```"
    },
    {
        "src_smiles": "COc1nc(NC(C)=O)cc(N)c1C#N",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1nc(NC(=O)C2CC2)c(N)c(C(=O)N)c1c1ccc(F)cc1\"\n}\n```"
    },
    {
        "src_smiles": "CS(=O)(=O)Nc1ccc2ccc3ncc(Cl)cc3c(=O)c2c1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CS(=O)(=O)Nc1ccc2ccc3ncc(C(F)(F)F)cc3c(=O)c2c1\"\n}\n```"
    },
    {
        "src_smiles": "Nc1c(C(=O)c2cccc(C(O)CO)c2)cnn1-c1ccc(F)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Nc1c(C(=O)c2cccc(C(O)C(F)(F)F)c2)cnn1-c1c(C#N)cc(F)cc1\"\n}\n```"
    },
    {
        "src_smiles": "O=c1cc(C2CCCCC2)oc2c1ccc1ccccc12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Nc1cc2c(oc(=O)c(c1)c1ccc(Cl)cc1)ccc3ccccc23\"\n}\n```"
    },
    {
        "src_smiles": "c1ccc(COc2ccc(OCCn3cnc4ccccc43)cc2)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"FC(F)(F)c1ccc(COc2ccc(OCCn3cnc4ccccc43)cc2)cc1\"\n}\n```"
    },
    {
        "src_smiles": "Cc1ncc2cc(-c3c(Cl)cccc3Cl)c(=O)n(C)c2n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"c1ncc2cc(-c3c(Cl)cccc3Cl)c(=O)n(C3CC3)c2n1\"\n}\n```"
    },
    {
        "src_smiles": "c1cnc(-c2c[nH]c3ncnc(N4CCOCC4)c23)cn1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Fc1ccc(-c2cn(CC#N)c3ncnc(N4C[C@H](C)OCC4)c23)cc1\"\n}\n```"
    },
    {
        "src_smiles": "Fc1ccc(-c2nc[nH]c2-c2ccncc2)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Fc1ccc(-c2nc[nH]c2-c2cc(N)ccn2)cc1\"\n}\n```"
    },
    {
        "src_smiles": "O=C(O)CCSc1ccc2ccccc2n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C(N)NHc1ccc2c(Cl)cccc2n1\"\n}\n```"
    },
    {
        "src_smiles": "O=C(O)c1cnc2c(ccc3ccccc32)c1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C(Nc1ccccc1)c1cnc2c(ccc3ccccc32)c1\"\n}\n```"
    },
    {
        "src_smiles": "Cc1cc(C)n(-c2ccc(C(=O)Nc3sccc3C(N)=O)cc2)n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Cc1cc(C)n(-c2c(F)ccc(C(=O)Nc3c(F)cc(C(N)=O)s3)c2)n1\"\n}\n```"
    },
    {
        "src_smiles": "Cc1[nH]c2ccc(Cl)cc2c1-c1ccnc(N2CCCC2)n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Cc1[nH]c2ccc(Cl)cc2c1-c1ccnc(N2C[C@@H](O)CC2)n1\"\n}\n```"
    },
    {
        "src_smiles": "CSc1nc(-c2ccc(F)cc2)c(-c2ccnc(OC(C)C)c2)[nH]1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CS(=O)c1nc(-c2ccc(F)cc2)c(-c3ccnc(OC(C)CO)c3)[nH]1\"\n}\n```"
    },
    {
        "src_smiles": "CCn1ncc(C2=NOC(C(=O)Nc3cccc(C(C)=O)c3)C2)c1C",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CCn1ncc(C2=NOC(C(=O)Nc3cccc(C(F)(F)F)c3)C2)c1C\"\n}\n```"
    },
    {
        "src_smiles": "O=c1cc(C2CCCCC2)oc2c1ccc1ccccc12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1ccc2oc(c(Nc3cccc(Cl)c3)c(=O)c2c1)c1ccc(F)cc1\"\n}\n```"
    },
    {
        "src_smiles": "COC(=O)c1ccc(=O)n(Cc2ccc3c(c2)OCO3)c1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CNC(=O)c1ccc(=O)n(Cc2c(F)cc3c(c2)OCO3)c1\"\n}\n```"
    },
    {
        "src_smiles": "Cn1c(=O)c(Oc2ccc(F)cc2F)cc2cnc(N3CCCC(O)C3)nc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Cn1c(=O)c(Oc2ccc(F)cc2F)cc2cnc(N1CC[C@@H](F)[C@@H](O)C1)nc21\"\n}\n```"
    },
    {
        "src_smiles": "O=C(Nc1ccc2c(c1)OCO2)C1CC(c2c(F)cccc2Cl)=NO1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C(Nc1ccc2c(c1)OCO2)C1C(C)C(c1cc(F)c(Cl)cc1)=NO1\"\n}\n```"
    },
    {
        "src_smiles": "Clc1ccccc1Nc1ccnc(Nc2ccc(N3CCOCC3)cc2)n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"FC(F)(F)c1cccc(Nc2ccnc(Nc3c(C)cc(N4CCOCC4)cc3)n2)c1\"\n}\n```"
    },
    {
        "src_smiles": "CSc1nc(-c2ccc(F)cc2)c(-c2ccnc(OCc3ccccc3)c2)[nH]1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"[NH2]c1nc(-c2ccc(F)cc2)c(-c3ccnc(OCc4cc(O)ccc4)c3)[nH]1\"\n}\n```"
    },
    {
        "src_smiles": "CC(C)(C)c1cnc(CSc2cnc(NC(=O)c3ccccc3)s2)o1",
        "prop": "jnk",
        "json_results": "To optimize the source molecule `CC(C)(C)c1cnc(CSc2cnc(NC(=O)c3ccccc3)s2)o1` for JNK3 inhibition, a structured intermediate optimization process is followed.\n\n**Step 1: Interpretation of the Source Molecule's Structure**\n\nThe SMILES string `CC(C)(C)c1cnc(CSc2cnc(NC(=O)c3ccccc3)s2)o1` is interpreted based on common conventions and cheminformatics toolkits.\nA likely interpretation, consistent with PubChem entries for similar structures and SMILES parsing logic, is `N-(5-(((5-(tert-butyl)-1,3-oxazol-2-yl)methyl)thio)thiazol-2-yl)benzamide`.\nThe canonical SMILES for this interpretation is: `CC(C)(C)c1oc(CSc2scc(NC(=O)c3ccccc3)n2)nc1`.\nThis molecule consists of:\n*   A `5-(tert-butyl)-1,3-oxazol-2-yl` moiety.\n*   A `methylthio` linker (`-CH2-S-`).\n*   A `thiazol-5-yl` unit connecting the linker to the amide.\n*   A `2-benzamido` group (`-NHC(=O)c3ccccc3`) on the thiazole.\n\n**Step 2: Identification of Key Modifiable Regions and Optimization Strategy**\n\nBased on known JNK3 inhibitor SAR (Structure-Activity Relationships) and general medicinal chemistry principles, the following regions are targeted for modification:\n1.  **Benzamide phenyl ring:** Substitutions on this ring can significantly impact potency and pharmacokinetic properties. Halogen substitutions (e.g., Cl, F) are common in JNK3 inhibitors.\n2.  **tert-Butyl group:** This hydrophobic group can be altered to optimize van der Waals interactions and improve pharmacokinetic properties (e.g., metabolic stability, solubility). Cyclopropyl is a common replacement for tert-butyl.\n3.  **Thioether linker (`-CH2-S-`):** Thioethers can be susceptible to metabolic oxidation (to sulfoxides and sulfones). Replacing the sulfur atom with oxygen (to form an ether, `-CH2-O-`) can improve metabolic stability.\n\n**Step 3: Structured Intermediate Optimization Process**\n\n*   **Source Molecule:** `CC(C)(C)c1oc(CSc2scc(NC(=O)c3ccccc3)n2)nc1`\n\n*   **Intermediate 1: Modification of the benzamide phenyl ring.**\n    The phenyl ring of the benzamide is modified by introducing a chlorine atom at the 3-position. 3-chlorobenzamides are often found in potent JNK inhibitors.\n    *   **Rationale:** Enhance binding affinity through specific interactions or altered electronic properties; improve metabolic stability.\n    *   **Molecule 1:** `CC(C)(C)c1oc(CSc2scc(NC(=O)c3cccc(Cl)c3)n2)nc1`\n        (`N-(5-(((5-(tert-butyl)-1,3-oxazol-2-yl)methyl)thio)thiazol-2-yl)-3-chlorobenzamide`)\n\n*   **Intermediate 2: Modification of the tert-butyl group.**\n    The `tert-butyl` group on the oxazole is replaced with a `cyclopropyl` group.\n    *   **Rationale:** Cyclopropyl groups can offer improved metabolic stability compared to tert-butyl, maintain or enhance hydrophobic interactions, and sometimes provide a better fit for hydrophobic pockets. They can also favorably impact cell permeability and reduce clearance.\n    *   **Molecule 2 (applying change to Molecule 1):** `C1CC1c1oc(CSc2scc(NC(=O)c3cccc(Cl)c3)n2)nc1`\n        (`N-(5-(((5-cyclopropyl-1,3-oxazol-2-yl)methyl)thio)thiazol-2-yl)-3-chlorobenzamide`)\n\n*   **Intermediate 3 (Final Target Molecule): Modification of the thioether linker.**\n    The `methylthio` linker (`-CH2-S-`) is replaced with a `methyloxy` linker (`-CH2-O-`).\n    *   **Rationale:** Ether linkers are generally more metabolically stable than thioether linkers, being less prone to oxidation. This change aims to improve the pharmacokinetic profile.\n    *   **Final Target Molecule (applying change to Molecule 2):** `C1CC1c1oc(COc2scc(NC(=O)c3cccc(Cl)c3)n2)nc1`\n        (`N-(5-(((5-cyclopropyl-1,3-oxazol-2-yl)methyl)oxy)thiazol-2-yl)-3-chlorobenzamide`)\n\nThis structured process applies rational modifications at key positions, aiming to enhance JNK3 inhibitory activity and improve drug-like properties. Each modification is based on established medicinal chemistry strategies.\n\n```json\n{\n    \"Final Target Molecule\": \"C1CC1c1oc(COc2scc(NC(=O)c3cccc(Cl)c3)n2)nc1\"\n}\n```"
    },
    {
        "src_smiles": "COc1cc2ncnc(N3CCN(C(=O)Nc4ccccn4)CC3)c2cc1OC",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1cc2ncnc(N3CCN(C(=O)Nc4cc(C(F)(F)F)ccn4)CC3)c2cc1OC\"\n}\n```"
    },
    {
        "src_smiles": "CCCC(=O)Nc1nc(NCc2ccc(OC)cc2)c2ncn(C(C)C)c2n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C(c1ccncc1)Nc1nc(NCc2ccc(F)cc2)c2ncn(C3CC3)c2n1\"\n}\n```"
    },
    {
        "src_smiles": "COc1ccc(-n2c(=O)c(C)nc3cnc(N4CCNCC4)nc32)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1ccc(-n2c(=O)c(C)nc3cnc(N4CCN(C)CC4)nc32)c(F)c1\"\n}\n```"
    },
    {
        "src_smiles": "Cn1c(=O)c(Oc2ccc(F)cc2F)cc2cnc(N3CCC(O)C3)nc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Cn1c(=O)c(Oc2ccc(F)cc2F)cc2cnc(N3C[C@H](C(=O)N)CC3)nc21\"\n}\n```"
    },
    {
        "src_smiles": "COc1ccc(-n2c(=O)cnc3cnc(Oc4cccc(Cl)c4)nc32)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"HOc1ccc(-n2c(=O)cnc3cnc(Oc4cc(Cl)cc(Cl)c4)nc32)cc1\"\n}\n```"
    },
    {
        "src_smiles": "CCNCCC(=O)Nc1c(C)[nH]c(C=C2C(=O)Nc3ccc(F)cc32)c1C",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C(Nc1cc(C)c2c(c1C)[nH]c2C=C1C(=O)N(c2c(F)cc(F)cc2)C1=O)C3CC3\"\n}\n```"
    },
    {
        "src_smiles": "NC1=NC(CF)(c2cc(Oc3ncccn3)ccc2F)CC(C(F)(F)F)O1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"NC1=NC(CF)(c2cc(Oc3ncc(N)nc3)ccc2F)CC(C(F)(F)F)O1\"\n}\n```"
    },
    {
        "src_smiles": "Oc1ccc(Nc2nc(-c3ccc(N4CCOCC4)cc3)cs2)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Oc1c(C(F)(F)F)cc(Nc2nc(-c3ccc(N4CCOCC4)cc3)cs2)cc1\"\n}\n```"
    },
    {
        "src_smiles": "O=c1cnc2cnc(OCc3ccccc3)nc2n1Cc1ccc(F)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C1NC=Nc2c1n(Cc1ccc(F)cc1)c(c1ccc(C(N)=O)cc1)n2\"\n}\n```"
    },
    {
        "src_smiles": "O=C(CSc1nc2ccccc2c(=O)n1CCCO)NCc1ccccc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C(CSc1nc2cc(F)ccc2c(=O)n1CCO)NCc1ccc(F)c(Cl)c1\"\n}\n```"
    },
    {
        "src_smiles": "CCC(C)(C)Nc1c(C#N)cnc2cnc(NCc3cccnc3)cc12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"N(C1CCCC1)c1c(C#N)cnc2cnc(NCc3c(F)cccn3)cc12\"\n}\n```"
    },
    {
        "src_smiles": "O=C1SC(=Cc2ccc3cc(F)ccc3n2)C(=O)N1CCN1CCCCC1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C1SC(=Cc2ccc3cc(F)ccc3n2)C(=O)N1CCN1CCC(O)CC1\"\n}\n```"
    },
    {
        "src_smiles": "CC(C)n1cnc2c(Nc3cc(N)cc(Cl)c3)nc(NC3CCCNC3)nc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"C1CC1n1cnc2c(Nc3cc(N)cc(C(F)(F)F)c3)nc(NC4CCN(C)CC4)nc21\"\n}\n```"
    },
    {
        "src_smiles": "NC(=O)c1cccc2c(NCc3cccc(Nc4nccs4)c3)ncnc12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CNC(=O)c1cccc2c(NCc3cc(Nc4ncc(C)s4)c(F)cc3)ncnc12\"\n}\n```"
    },
    {
        "src_smiles": "COc1ccc(OC)c(C2=NOC(C(=O)Nc3cccc(C(C)=O)c3)C2)c1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Fc1ccc(OC)c(C2=NOC(C(=O)Nc3cccc(C(C)=O)c3)C2)c1\"\n}\n```"
    },
    {
        "src_smiles": "CC1CC(C)CN(S(=O)(=O)c2ccc(C(=O)NCc3ccco3)cc2)C1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CC1CC(C)CN(S(=O)(=O)c2cc(F)c(C(=O)NCc3cncc(N)c3)cc2)C1\"\n}\n```"
    },
    {
        "src_smiles": "COC(=O)c1ccc(-c2ccc(C=C3SC(=O)NC3=O)o2)c(O)c1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"NC(=O)c1ccc(-c2ccc(C=C3SC(=O)NC3=O)cc2)c(O)c1\"\n}\n```"
    },
    {
        "src_smiles": "Cn1c(=O)c(Oc2ccc(F)cc2F)cc2cnc(N3CCC(O)C3)nc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Cn1c(=O)c(Oc2ccc(F)cc2F)cc2cnc(N3CC[C@H](O)CCC3)nc21\"\n}\n```"
    },
    {
        "src_smiles": "N#Cc1cc2cnc(NCc3ccccc3)nc2n(C2CCCC2)c1=O",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"N#Cc1cc2cnc(NCc3cnccc3)nc2n(c4cccc(O)c4)c1=O\"\n}\n```"
    },
    {
        "src_smiles": "CC(C)N(CCO)c1nc(Nc2cccc(Cl)c2)c2ncn(C(C)C)c2n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O1CCN(c1nc(Nc2cccc(Cl)c2)c2ncn(C3CC3)c2n1)CC1\"\n}\n```"
    },
    {
        "src_smiles": "NC(=O)c1cccc2c(NCc3cccc(Nc4ncccn4)c3)ncnc12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"NC(=O)c1c(OC)cc2c(NCc3c(C)c(Nc4ncccn4)ccc3)ncnc12\"\n}\n```"
    },
    {
        "src_smiles": "CNc1cc(N(CCCN(C)C)C(=O)Nc2c(Cl)cccc2Cl)ncn1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CNc1cc(N(CCCN2CCOCC2)C(=O)Nc3c(Cl)cccc3Cl)ncn1\"\n}\n```"
    },
    {
        "src_smiles": "CCCCNC(=O)Cc1c(OC)ccc2cc(Br)ccc12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"C1CC1NC(=O)c1c(OC)ccc2cc(Br)ccc12\"\n}\n```"
    },
    {
        "src_smiles": "C#Cc1cc(Oc2cnc(NCC(C)O)nc2N)c(C(C)C)cc1OC",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"N#Cc1cc(Oc2cnc(N3CCC[C@H](O)C3)nc2N)c(C4CC4)cc1F\"\n}\n```"
    },
    {
        "src_smiles": "OC1CCCC(c2nccnc2Oc2ccc(Nc3ccccn3)cc2)C1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"OC1CCCC(c2nccnc2Oc3cc(F)c(Nc4ncc(C)cc4)cc3)C1\"\n}\n```"
    },
    {
        "src_smiles": "CC(C)C(CO)Nc1nc(NCc2ccccc2O)c2ncn(C(C)C)c2n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"N([C@H](C1CC1)CH2OH)c2nc(NCc3ccc(O)c(F)c3)c4c(ncn4C5CC5)n2\"\n}\n```"
    },
    {
        "src_smiles": "Nc1n[nH]c2cccc(-c3ccc(NC(=O)Nc4cccc(F)c4)cc3)c12",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Nc1nN(C)c2cccc(-c3ccc(NC(=O)Nc4cccc(F)c4)cc3)c12\"\n}\n```"
    },
    {
        "src_smiles": "CCN(CC)CCn1c(NC(=O)c2ccc(C)cc2)nc2ccccc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CCN(CC)CCn1c(NC(=O)c2ccc(C(F)(F)F)cc2)nc2ccccc21\"\n}\n```"
    },
    {
        "src_smiles": "CC(C)n1cnc2c(NCc3ccccc3)nc(I)nc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"C1CC1n1cnc2c(NCc3cc(F)ccc3)nc(N)nc21\"\n}\n```"
    },
    {
        "src_smiles": "COc1cc2ncnc(N(C)c3ccc(F)c(Cl)c3)c2cc1OC",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1cc2ncnc(N(C)c3ccc(F)c(Cl)c3)c2cc1OCCN1CCOCC1\"\n}\n```"
    },
    {
        "src_smiles": "COc1cc2c(Nc3ccc4c(c3)OCO4)ncnc2c(OC)c1OC",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1c(OC)c2c(cc(O)c1)ncnc2Nc1cc(F)c2c(c1)OCO2\"\n}\n```"
    },
    {
        "src_smiles": "Cn1c(=O)c(Oc2ccc(F)cc2F)cc2cnc(N3CCC(O)C3)nc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"C1CC1n1c(=O)c(Oc2cc3c(cn[nH]3)cc2)cc2cnc(N3C[C@@H](O)CC3)nc21\"\n}\n```"
    },
    {
        "src_smiles": "C=CCn1c(SCC(=O)NCc2ccco2)nc2sc(C)c(C)c2c1=O",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"C=CCn1c(SCC(=O)NCc1ccncc1)nc2sc(C)c(C)c2c1=O\"\n}\n```"
    },
    {
        "src_smiles": "COc1cc2ncnc(Nc3ccc(C(F)(F)F)cc3)c2c(OC)c1OC",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1c(N)cc2c(ncnc2Nc2cc(CN(C)C)cc(C(F)(F)F)c2)c1\"\n}\n```"
    },
    {
        "src_smiles": "OC1CCC(Nc2nc(NCCc3ccccc3)ncc2-c2ccccn2)CC1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"OC1CCC(Nc2nc(NCc3ccc(F)cc3)ncc2-c2cccc(C#N)c2)CC1\"\n}\n```"
    },
    {
        "src_smiles": "CCOc1ccc(CC(=O)Nc2c(C(N)=O)oc3ccc(Br)cc23)cc1OCC",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \" CCOc1ccc(CC(=O)Nc2c(C(N)=O)oc3ccc(C(F)(F)F)cc23)cc1OCC\"\n}\n```"
    },
    {
        "src_smiles": "CN(C)Cc1ccn2c(-c3ccnc(S(C)(=O)=O)n3)c(-c3ccc(F)cc3)nc2c1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CN1CCOCC1Cc1ccn2c(-c3ccnc(S(N)(=O)=O)n3)c(-c3ccc(F)cc3)nc2c1\"\n}\n```"
    },
    {
        "src_smiles": "COCCn1c(=O)c(-c2ccc(OC)cc2)nc2cnc(OCc3ccccc3)nc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"OCCn1c(=O)c(-c2ccc(OC)c(F)c2)nc2cnc(OCc3cnccc3)nc21\"\n}\n```"
    },
    {
        "src_smiles": "Cc1ncc(C(=O)Nc2cccc(C(C)Nc3ncnc4c(C(N)=O)cccc34)c2)s1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Cc1ncc(C(=O)Nc2cccc(C(C)Nc3ncnc4c(C(=O)N(C)C)cccc34)c2)s1\"\n}\n```"
    },
    {
        "src_smiles": "NC1=NC(CF)(c2cc(Oc3ncccc3F)ccc2F)CC(C(F)(F)F)O1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"NC1=NC(CF)(c2cc(Oc3ncccc3C(F)(F)F)ccc2F)CC(C(F)(F)F)O1\"\n}\n```"
    },
    {
        "src_smiles": "COCCNC1CCC(Nc2cc(-c3nc(NCC4CCOCC4)ccc3Cl)c(Cl)cn2)CC1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"OCCOCNC1CCC(Nc2cc(-c3nc(NCC4CCOCC4)ccc3C(F)(F)F)c(F)cn2)CC1\"\n}\n```"
    },
    {
        "src_smiles": "CC(C)n1cnc2c(NCc3ccc(-c4ccccc4)cc3)nc(N(CCO)CCO)nc21",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CC(C)n1cnc2c(NCc3ccc(-c4ccc(F)cc4)cc3)nc(N4CCOCC4)nc21\"\n}\n```"
    },
    {
        "src_smiles": "COc1cc2ncnc(Nc3cc(Cl)ccc3Cl)c2cc1OCCCCCC(=O)NO",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1cc2ncnc(Nc3cc(Cl)ccc3Cl)c2cc1OCCN1CCC(O)CC1\"\n}\n```"
    },
    {
        "src_smiles": "CS(=O)(=O)Nc1ccc(-c2cnc3cccc(Nc4ncccc4Cl)c3c2)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"Cc1c(-c2ccc(NS(=O)(=O)C3CC3)c(F)c2)nc2cc(Nc4ncccc4Cl)cn12\"\n}\n```"
    },
    {
        "src_smiles": "COc1cc2ncnc(Nc3cccc(Br)c3)c2cc1OCCC(=O)NO",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1cc2ncnc(Nc3cncc(C#N)c3)c2cc1OCCN1CCOCC1\"\n}\n```"
    },
    {
        "src_smiles": "CC(=O)NC(C)c1ccc(OC2CCN(c3ccnc(N4CCCC(F)(F)C4)n3)C2)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"c1cc1C(=O)NC(C)c1ccc(OC2CCN(c3ccnc(N4CCCC(F)(F)C4)n3)C2)cc1\"\n}\n```"
    },
    {
        "src_smiles": "CC(C)C(CO)Nc1nc(NCc2cccc(I)c2)c2ncn(C(C)C)c2n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CC(C)[C@H](CH2OH)Nc1nc(NCc2cncc(I)c2)c2ncn(C3CCCC3)c2n1\"\n}\n```"
    },
    {
        "src_smiles": "COc1ccc(C=CC(=O)Nc2cc(-c3c(-c4ccc(F)cc4)nc(SC)n3C)ccn2)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1ccc(C=CC(=O)Nc2cc(-c3c(-c4ccc(F)cc4)nc(N)n3C)ccn2)cc1\"\n}\n```"
    },
    {
        "src_smiles": "COC1CCCN(c2nccc(N3CCC(Oc4ccc(C(C)NC(C)=O)cc4)C3)n2)C1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"OC1CCCN(c2nccc(N3CCC(Oc4ccc(CNC(=O)C5CC5)nc4)C3)n2)C1\"\n}\n```"
    },
    {
        "src_smiles": "COc1cc2ncnc(N3CCN(C(=O)NCc4ccc(Br)cc4)CC3)c2cc1OC",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1cc2ncnc(N3CCN(C(=O)N[C@@H](C)c4ccc(cn4)C(F)(F)F)CC3)c2cc1OC\"\n}\n```"
    },
    {
        "src_smiles": "COc1ccc(NC(=O)Nc2ccc(N(C)c3ncnc4cc(OC)c(OC)cc34)cc2)cc1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C(Nc1ccc(N(C)c2ncnc3cc(OC)c(OC)cc23)cc1)Nc1ccc(Cl)c(C(F)(F)F)c1\"\n}\n```"
    },
    {
        "src_smiles": "CSc1nc(N)cc(-c2c(-c3ccc(F)cc3)ncn2CCCN2CCOCC2)n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"COc1nc(N)cc(-c2c(-c3ccc(F)cc3)ncn2C1CCN(C)CC1)n1\"\n}\n```"
    },
    {
        "src_smiles": "CCOC(=O)Nc1ncc(Oc2cc(I)c(OC)cc2C(C)C)c(N)n1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CCOC(=O)Nc1ncc(Oc2cc(C(F)(F)F)c(OC)cc2C1CC1)c(N)n1\"\n}\n```"
    },
    {
        "src_smiles": "CCCONC(=O)c1ccccc1Sc1ccc2c(C=Cc3ccccn3)n[nH]c2c1",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"CH3NHC(=O)c1ccc(F)cc1NHc1ccc2c(C=Cc3ccncc3)n[nH]c2c1\"\n}\n```"
    },
    {
        "src_smiles": "CCOC(=O)CN1C(=O)SC(=Cc2ccc(-c3ccc(Cl)cc3Cl)o2)C1=O",
        "prop": "jnk",
        "json_results": "```json\n{\n    \"Final Target Molecule\": \"O=C(O)CN1C(=O)SC(=Cc2sc(-c3ccc(Cl)cc3Cl)cc2)C1=O\"\n}\n```"
    }
]